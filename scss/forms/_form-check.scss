@use "../config" as *;
@use "../colors" as *;
@use "../variables" as *;
@use "../functions" as *;
@use "../vendor/rfs" as *;
@use "../mixins/border-radius" as *;
@use "../mixins/box-shadow" as *;
@use "../mixins/color-mode" as *;
@use "../mixins/focus-ring" as *;
@use "../mixins/transition" as *;
@use "form-variables" as *;

// scss-docs-start form-check-variables
$form-check-input-width:                  1em !default;
$form-check-min-height:                   $font-size-base * $line-height-base !default;
$form-check-padding-start:                $form-check-input-width + .5em !default;
$form-check-margin-bottom:                .125rem !default;
$form-check-label-color:                  null !default;
$form-check-label-cursor:                 null !default;
$form-check-transition:                   null !default;

$form-check-input-active-filter:          brightness(90%) !default;

$form-check-input-bg:                     $input-bg !default;
$form-check-input-border:                 var(--#{$prefix}border-width) solid var(--#{$prefix}border-color) !default;
$form-check-input-border-radius:          .25em !default;
$form-check-radio-border-radius:          50% !default;
$form-check-input-focus-border:           $input-focus-border-color !default;
$form-check-input-focus-box-shadow:       $focus-ring-box-shadow !default;

$form-check-input-checked-color:          $component-active-color !default;
$form-check-input-checked-bg-color:       $component-active-bg !default;
$form-check-input-checked-border-color:   $form-check-input-checked-bg-color !default;
$form-check-input-checked-bg-image:       url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form-check-input-checked-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/></svg>") !default;
$form-check-radio-checked-bg-image:       url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$form-check-input-checked-color}'/></svg>") !default;

$form-check-input-indeterminate-color:          $component-active-color !default;
$form-check-input-indeterminate-bg-color:       $component-active-bg !default;
$form-check-input-indeterminate-border-color:   $form-check-input-indeterminate-bg-color !default;
$form-check-input-indeterminate-bg-image:       url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form-check-input-indeterminate-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/></svg>") !default;

$form-check-input-disabled-opacity:        .5 !default;
$form-check-label-disabled-opacity:        $form-check-input-disabled-opacity !default;
$form-check-btn-check-disabled-opacity:    $btn-disabled-opacity !default;

$form-check-inline-margin-end:    1rem !default;
// scss-docs-end form-check-variables

// scss-docs-start form-switch-variables
$form-switch-color:               rgba($black, .25) !default;
$form-switch-width:               1.5em !default;
$form-switch-padding-start:       $form-switch-width + .5em !default;
$form-switch-bg-image:            url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color}'/></svg>") !default;
$form-switch-border-radius:       $form-switch-width !default;
$form-switch-transition:          background-position .15s ease-in-out !default;

$form-switch-focus-color:         $input-focus-border-color !default;
$form-switch-focus-bg-image:      url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-focus-color}'/></svg>") !default;

$form-switch-checked-color:       $component-active-color !default;
$form-switch-checked-bg-image:    url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-checked-color}'/></svg>") !default;
$form-switch-checked-bg-position: right center !default;
// scss-docs-end form-switch-variables

$check-border-color: var(--#{$prefix}border-color) !default;
$check-checked-bg: var(--#{$prefix}primary-base) !default;
$check-checked-border-color: $check-checked-bg !default;
$check-indeterminate-bg: var(--#{$prefix}primary-base) !default;
$check-indeterminate-border-color: $check-indeterminate-bg !default;
$check-disabled-bg: var(--#{$prefix}secondary-bg) !default;
$check-disabled-border-color: $check-disabled-bg !default;
$check-disabled-opacity: .65 !default;

@layer forms {
  b-checkgroup,
  b-radiogroup {
    display: flex;
    gap: var(--#{$prefix}gap, .5rem);
    align-items: var(--#{$prefix}align-items, start);

    .description {
      color: var(--#{$prefix}secondary-text);
    }
  }

  .check,
  .radio {
    --#{$prefix}check-bg: transparent;
    --#{$prefix}check-border-color: #{$check-border-color};
    --#{$prefix}check-checked-bg: #{$check-checked-bg};
    --#{$prefix}check-checked-border-color: #{$check-checked-border-color};
    --#{$prefix}check-indeterminate-bg: #{$check-indeterminate-bg};
    --#{$prefix}check-indeterminate-border-color: #{$check-indeterminate-border-color};
    --#{$prefix}check-disabled-bg: #{$check-disabled-bg};
    --#{$prefix}check-disabled-border-color: #{$check-disabled-border-color};
    --#{$prefix}check-disabled-opacity: #{$check-disabled-opacity};
  }

  .check {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    margin-block: .125rem;

    :where(svg, input) {
      flex-shrink: 0;
      grid-row-start: 1;
      grid-column-start: 1;
      width: 1rem;
      height: 1rem;
    }

    :where(input) {
      appearance: none;
      // later: maybe set a tertiary bg color?
      background-color: var(--#{$prefix}check-bg);
      border: 1px solid var(--#{$prefix}check-border-color);
      // stylelint-disable-next-line property-disallowed-list
      border-radius: .25em;
    }

    :where(input:checked, input:indeterminate) {
      background-color: var(--#{$prefix}check-checked-bg);
      border-color: var(--#{$prefix}check-checked-border-color);
    }

    &:has(input:checked) .checked,
    &:has(input:indeterminate) .indeterminate {
      display: block;
      color: var(--#{$prefix}primary-contrast);
      stroke: currentcolor;
    }

    &:has(input:disabled) {
      --#{$prefix}check-bg: var(--#{$prefix}check-disabled-bg);

      ~ label {
        color: var(--#{$prefix}secondary-text);
        cursor: default;
      }
    }

    &:has(input:disabled:checked) {
      opacity: var(--#{$prefix}check-disabled-opacity);
    }

    :where(svg) {
      pointer-events: none;
    }

    :where(svg path) {
      display: none;
    }
  }

  .radio {
    position: relative;
    flex-shrink: 0;
    width: 1rem;
    height: 1rem;
    margin-block: .125rem;
    appearance: none;
    background-color: var(--#{$prefix}check-bg);
    border: 1px solid var(--#{$prefix}check-border-color);
    // stylelint-disable-next-line property-disallowed-list
    border-radius: 50%;

    &:checked {
      color: var(--#{$prefix}primary-contrast);
      background-color: var(--#{$prefix}check-checked-bg);
      border-color: var(--#{$prefix}check-checked-border-color);

      &::before {
        position: absolute;
        inset: .25rem;
        content: "";
        background-color: currentcolor;
        // stylelint-disable-next-line property-disallowed-list
        border-radius: 50%;
      }
    }

    &:disabled {
      --#{$prefix}check-bg: var(--#{$prefix}check-disabled-bg);

      ~ label {
        color: var(--#{$prefix}secondary-text);
        cursor: default;
      }
    }
  }

  .switch {
    --#{$prefix}switch-height: 1.25rem;
    --#{$prefix}switch-width: calc(var(--#{$prefix}switch-height) * 1.5);
    --#{$prefix}switch-padding: .0625rem;
    --#{$prefix}switch-bg: var(--#{$prefix}secondary-bg);
    --#{$prefix}switch-border-width: var(--#{$prefix}border-width);
    --#{$prefix}switch-border-color: var(--#{$prefix}border-color);
    --#{$prefix}switch-indicator-bg: var(--#{$prefix}white);
    --#{$prefix}switch-checked-bg: var(--#{$prefix}primary-base);
    --#{$prefix}switch-checked-indicator-bg: var(--#{$prefix}white);
    --#{$prefix}switch-disabled-bg: var(--#{$prefix}secondary-bg);
    --#{$prefix}switch-disabled-indicator-bg: var(--#{$prefix}secondary-text);

    position: relative;
    display: flex;
    flex-shrink: 0;
    align-items: stretch;
    justify-content: flex-start;
    width: var(--#{$prefix}switch-width);
    height: var(--#{$prefix}switch-height);
    padding: var(--#{$prefix}switch-padding);
    background-color: var(--#{$prefix}switch-bg);
    border: var(--#{$prefix}switch-border-width) solid var(--#{$prefix}switch-border-color);
    // stylelint-disable-next-line property-disallowed-list
    border-radius: 10rem;
    box-shadow: inset 0 1px 2px rgba($black, .05);
    // stylelint-disable-next-line property-disallowed-list
    transition: .15s ease-in-out;
    transition-property: padding-inline-start, background-color;

    &::before {
      flex-shrink: 0;
      width: calc(var(--#{$prefix}switch-height) - calc(var(--#{$prefix}switch-padding) * 2) - var(--#{$prefix}switch-border-width) * 2);
      height: calc(var(--#{$prefix}switch-height) - calc(var(--#{$prefix}switch-padding) * 2) - var(--#{$prefix}switch-border-width) * 2);
      // width: calc(var(--#{$prefix}switch-height) - calc(var(--#{$prefix}switch-padding) * 2));
      // height: calc(var(--#{$prefix}switch-height) - calc(var(--#{$prefix}switch-padding) * 2));
      content: "";
      background-color: var(--#{$prefix}switch-indicator-bg);
      // stylelint-disable-next-line property-disallowed-list
      border-radius: 50%;
      box-shadow: 0 1px 2px rgba($black, .1);
    }

    input {
      position: absolute;
      inset: 0;
      appearance: none;
      background-color: transparent;
    }

    &:has(input:checked) {
      padding-inline-start: calc(var(--#{$prefix}switch-height) / 2 + var(--#{$prefix}switch-padding));
      background-color: var(--#{$prefix}primary-base);
    }

    &:has(input:disabled) {
      --#{$prefix}switch-bg: var(--#{$prefix}switch-disabled-bg);
      --#{$prefix}switch-indicator-bg: var(--#{$prefix}switch-disabled-indicator-bg);

      &::before { opacity: .4; }

      ~ label {
        color: var(--#{$prefix}secondary-text);
        cursor: default;
      }
    }
  }
  .switch-sm {
    --#{$prefix}switch-height: 1em;
  }
  .switch-lg {
    --#{$prefix}switch-height: 2em;
  }

  .select {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));

    > select,
    > svg {
      grid-row-start: 1;
      grid-column-start: 1;
    }

    > select {
      padding: .5rem 3rem .5rem 1em;
      font-size: 14px;
      line-height: 20px;
      appearance: none;
      background-color: var(--#{$prefix}body-bg);
      border: 1px solid var(--#{$prefix}border-color);
      // stylelint-disable-next-line property-disallowed-list
      border-radius: .5em;
    }

    > svg {
      align-self: center;
      justify-self: end;
      width: 1rem;
      height: 1rem;
      margin-right: 1rem;
    }
  }

  .form-check {
    display: block;
    min-height: $form-check-min-height;
    padding-left: $form-check-padding-start;
    margin-bottom: $form-check-margin-bottom;

    .form-check-input {
      float: left;
      margin-left: $form-check-padding-start * -1;
    }
  }

  .form-check-reverse {
    padding-right: $form-check-padding-start;
    padding-left: 0;
    text-align: right;

    .form-check-input {
      float: right;
      margin-right: $form-check-padding-start * -1;
      margin-left: 0;
    }
  }

  .form-check-input {
    --#{$prefix}form-check-bg: #{$form-check-input-bg};

    flex-shrink: 0;
    width: $form-check-input-width;
    height: $form-check-input-width;
    margin-top: ($line-height-base - $form-check-input-width) * .5; // line-height minus check height
    vertical-align: top;
    appearance: none;
    background-color: var(--#{$prefix}form-check-bg);
    background-image: var(--#{$prefix}form-check-bg-image);
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    border: $form-check-input-border;
    print-color-adjust: exact; // Keep themed appearance for print
    @include transition($form-check-transition);

    &[type="checkbox"] {
      @include border-radius($form-check-input-border-radius);
    }

    &[type="radio"] {
      // stylelint-disable-next-line property-disallowed-list
      border-radius: $form-check-radio-border-radius;
    }

    &:active {
      filter: $form-check-input-active-filter;
    }

    &:focus-visible {
      border-color: $form-check-input-focus-border;
      @include focus-ring(true);
      --#{$prefix}focus-ring-offset: 1px;
      // box-shadow: $form-check-input-focus-box-shadow;
    }

    &:checked {
      background-color: $form-check-input-checked-bg-color;
      border-color: $form-check-input-checked-border-color;

      &[type="checkbox"] {
        @if $enable-gradients {
          --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-checked-bg-image)}, var(--#{$prefix}gradient);
        } @else {
          --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-checked-bg-image)};
        }
      }

      &[type="radio"] {
        @if $enable-gradients {
          --#{$prefix}form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image)}, var(--#{$prefix}gradient);
        } @else {
          --#{$prefix}form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image)};
        }
      }
    }

    &[type="checkbox"]:indeterminate {
      background-color: $form-check-input-indeterminate-bg-color;
      border-color: $form-check-input-indeterminate-border-color;

      @if $enable-gradients {
        --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image)}, var(--#{$prefix}gradient);
      } @else {
        --#{$prefix}form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image)};
      }
    }

    &:disabled {
      pointer-events: none;
      filter: none;
      opacity: $form-check-input-disabled-opacity;
    }

    // Use disabled attribute in addition of :disabled pseudo-class
    // See: https://github.com/twbs/bootstrap/issues/28247
    &[disabled],
    &:disabled {
      ~ .form-check-label {
        cursor: default;
        opacity: $form-check-label-disabled-opacity;
      }
    }
  }

  .form-check-label {
    color: $form-check-label-color;
    cursor: $form-check-label-cursor;
  }

  //
  // Switch
  //

  .form-switch {
    padding-left: $form-switch-padding-start;

    .form-check-input {
      --#{$prefix}form-switch-bg: #{escape-svg($form-switch-bg-image)};

      width: $form-switch-width;
      margin-left: $form-switch-padding-start * -1;
      background-image: var(--#{$prefix}form-switch-bg);
      background-position: left center;
      @include border-radius($form-switch-border-radius, 0);
      @include transition($form-switch-transition);

      &:focus {
        --#{$prefix}form-switch-bg: #{escape-svg($form-switch-focus-bg-image)};
      }

      &:checked {
        background-position: $form-switch-checked-bg-position;

        @if $enable-gradients {
          --#{$prefix}form-switch-bg: #{escape-svg($form-switch-checked-bg-image)}, var(--#{$prefix}gradient);
        } @else {
          --#{$prefix}form-switch-bg: #{escape-svg($form-switch-checked-bg-image)};
        }
      }
    }

    &.form-check-reverse {
      padding-right: $form-switch-padding-start;
      padding-left: 0;

      .form-check-input {
        margin-right: $form-switch-padding-start * -1;
        margin-left: 0;
      }
    }
  }

  .form-check-inline {
    display: inline-block;
    margin-right: $form-check-inline-margin-end;
  }

  .btn-check {
    position: absolute;
    clip: rect(0, 0, 0, 0);
    pointer-events: none;

    &[disabled],
    &:disabled {
      + .btn {
        pointer-events: none;
        filter: none;
        opacity: $form-check-btn-check-disabled-opacity;
      }
    }
  }

  @if $enable-dark-mode {
    @include color-mode(dark) {
      .form-switch .form-check-input:not(:checked):not(:focus) {
        --#{$prefix}form-switch-bg: #{escape-svg($form-switch-bg-image-dark)};
      }
    }
  }
}
